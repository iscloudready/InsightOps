{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Docker Events",
        "type": "dashboard"
      }
    ]
  },
  "title": "Docker Overview Pro Dashboard",
  "uid": "docker-overview-pro",
  "tags": ["docker", "containers", "pro"],
  "refresh": "10s",
  "schemaVersion": 38,
  "version": 1,
  "panels": [
    {
      "title": "Container Status Overview",
      "type": "stat",
      "gridPos": {"h": 4, "w": 6, "x": 0, "y": 0},
      "datasource": "Prometheus",
      "options": {
        "colorMode": "value",
        "graphMode": "area"
      },
      "targets": [
        {
          "expr": "sum(docker_container_status)",
          "legendFormat": "Running Containers"
        }
      ]
    },
    {
      "title": "Container Health Matrix",
      "type": "statusmap",
      "gridPos": {"h": 8, "w": 18, "x": 6, "y": 0},
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "docker_container_health_status",
          "legendFormat": "{{name}}"
        }
      ]
    },
    {
      "title": "Resource Utilization",
      "type": "timeseries",
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8},
      "datasource": "Prometheus",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "drawStyle": "line",
            "lineInterpolation": "smooth",
            "fillOpacity": 10
          }
        }
      },
      "targets": [
        {
          "expr": "sum(rate(container_cpu_usage_seconds_total{container!=\"\"}[5m])) by (container)",
          "legendFormat": "{{container}} CPU"
        },
        {
          "expr": "sum(container_memory_usage_bytes{container!=\"\"}) by (container)",
          "legendFormat": "{{container}} Memory"
        }
      ]
    },
    {
      "title": "Container Restarts",
      "type": "bargauge",
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8},
      "datasource": "Prometheus",
      "options": {
        "orientation": "horizontal",
        "showUnfilled": true
      },
      "targets": [
        {
          "expr": "docker_container_restart_count",
          "legendFormat": "{{name}}"
        }
      ],
      "alert": {
        "name": "High Restart Count",
        "conditions": [
          {
            "type": "query",
            "query": { "params": ["A", "5m", "now"] },
            "reducer": { "type": "max" },
            "evaluator": { "type": "gt", "params": [5] }
          }
        ]
      }
    },
    {
      "title": "Network Traffic by Container",
      "type": "timeseries",
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 16},
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "rate(container_network_receive_bytes_total[5m])",
          "legendFormat": "{{container}} Rx"
        },
        {
          "expr": "rate(container_network_transmit_bytes_total[5m])",
          "legendFormat": "{{container}} Tx"
        }
      ]
    },
    {
      "title": "Disk Usage",
      "type": "gauge",
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 16},
      "datasource": "Prometheus",
      "fieldConfig": {
        "defaults": {
          "max": 100,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              { "color": "green", "value": null },
              { "color": "yellow", "value": 70 },
              { "color": "red", "value": 85 }
            ]
          }
        }
      },
      "targets": [
        {
          "expr": "(container_fs_usage_bytes / container_fs_limit_bytes) * 100",
          "legendFormat": "{{container}}"
        }
      ]
    }
  ],
  "templating": {
    "list": [
      {
        "name": "container",
        "type": "query",
        "datasource": "Prometheus",
        "query": "label_values(container_cpu_usage_seconds_total, container)",
        "refresh": 1,
        "includeAll": true
      },
      {
        "name": "node",
        "type": "query",
        "datasource": "Prometheus",
        "query": "label_values(node)",
        "refresh": 1
      }
    ]
  },
  "time": {
    "from": "now-3h",
    "to": "now"
  }
}