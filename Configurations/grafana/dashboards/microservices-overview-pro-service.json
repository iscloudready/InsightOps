{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Deployments",
        "type": "dashboard"
      }
    ]
  },
  "title": "Microservices Overview Pro Dashboard",
  "uid": "microservices-overview-pro",
  "tags": ["microservices", "overview", "pro"],
  "refresh": "10s",
  "schemaVersion": 38,
  "version": 1,
  "panels": [
    {
      "title": "Services Health Matrix",
      "type": "statusmap",
      "gridPos": {"h": 8, "w": 24, "x": 0, "y": 0},
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "up{service=~\"$service\"}",
          "legendFormat": "{{service}} - {{instance}}"
        }
      ]
    },
    {
      "title": "Service Instance Count",
      "type": "stat",
      "gridPos": {"h": 4, "w": 6, "x": 0, "y": 8},
      "datasource": "Prometheus",
      "options": {
        "colorMode": "value",
        "graphMode": "area"
      },
      "targets": [
        {
          "expr": "count(up{service=~\"$service\"}) by (service)",
          "legendFormat": "{{service}}"
        }
      ]
    },
    {
      "title": "Cross-Service Communication",
      "type": "nodeGraph",
      "gridPos": {"h": 8, "w": 18, "x": 6, "y": 8},
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "sum(rate(service_calls_total[5m])) by (source_service, destination_service)",
          "legendFormat": "{{source_service}} -> {{destination_service}}"
        }
      ]
    },
    {
      "title": "Service Response Times",
      "type": "timeseries",
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 16},
      "datasource": "Prometheus",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "drawStyle": "line",
            "lineInterpolation": "smooth",
            "fillOpacity": 10
          }
        }
      },
      "targets": [
        {
          "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{service=~\"$service\"}[5m])) by (le, service))",
          "legendFormat": "{{service}} P95"
        }
      ],
      "alert": {
        "name": "High Latency Alert",
        "conditions": [
          {
            "type": "query",
            "query": { "params": ["A", "5m", "now"] },
            "reducer": { "type": "max" },
            "evaluator": { "type": "gt", "params": [1] }
          }
        ]
      }
    },
    {
      "title": "Error Rates",
      "type": "timeseries",
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 16},
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "sum(rate(http_requests_total{status=~\"5..\", service=~\"$service\"}[5m])) by (service) / sum(rate(http_requests_total{service=~\"$service\"}[5m])) by (service) * 100",
          "legendFormat": "{{service}}"
        }
      ]
    },
    {
      "title": "Resource Usage by Service",
      "type": "timeseries",
      "gridPos": {"h": 8, "w": 24, "x": 0, "y": 24},
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "sum(rate(process_cpu_seconds_total{service=~\"$service\"}[5m])) by (service)",
          "legendFormat": "{{service}} CPU"
        },
        {
          "expr": "sum(process_resident_memory_bytes{service=~\"$service\"}) by (service)",
          "legendFormat": "{{service}} Memory"
        }
      ]
    },
    {
      "title": "Circuit Breaker Status",
      "type": "table",
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 32},
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "circuit_breaker_state",
          "instant": true
        }
      ],
      "transformations": [
        {
          "type": "organize",
          "config": {
            "indexByName": {},
            "renameByName": {
              "service": "Service",
              "state": "State",
              "last_trip": "Last Trip"
            }
          }
        }
      ]
    },
    {
      "title": "Service Version Distribution",
      "type": "piechart",
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 32},
      "datasource": "Prometheus",
      "options": {
        "legend": {
          "placement": "right",
          "values": ["value"]
        }
      },
      "targets": [
        {
          "expr": "count(service_version) by (version)",
          "legendFormat": "{{version}}"
        }
      ]
    }
  ],
  "templating": {
    "list": [
      {
        "name": "service",
        "type": "query",
        "datasource": "Prometheus",
        "query": "label_values(up, service)",
        "refresh": 1,
        "includeAll": true,
        "multi": true
      },
      {
        "name": "instance",
        "type": "query",
        "datasource": "Prometheus",
        "query": "label_values(up{service=~\"$service\"}, instance)",
        "refresh": 1,
        "includeAll": true
      }
    ]
  },
  "time": {
    "from": "now-3h",
    "to": "now"
  }
}