@{
    ViewData["Title"] = "Operations Dashboard";
}

<div class="container-fluid p-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0 text-gray-800">Operations Control Center</h1>
            <p class="text-muted">Microservices Health & Performance Monitoring</p>
        </div>
        <div>
            <button class="btn btn-primary" data-refresh>
                <i class="fas fa-sync-alt"></i> Refresh
            </button>
        </div>
    </div>

    <!-- Alert Container for Errors -->
    <div id="alertContainer" class="mb-4"></div>

    <!-- Metrics Cards -->
    <div class="row g-4 mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="card shadow h-100">
                <div class="card-body border-left-primary">
                    <div class="row align-items-center">
                        <div class="col">
                            <div class="text-xs fw-bold text-primary text-uppercase mb-1">Active Orders</div>
                            <div class="h5 mb-0 fw-bold text-gray-800" id="activeOrdersCount">0</div>
                            <div class="text-muted small" id="ordersTrend"></div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-shopping-cart fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card shadow h-100">
                <div class="card-body border-left-success">
                    <div class="row align-items-center">
                        <div class="col">
                            <div class="text-xs fw-bold text-success text-uppercase mb-1">Inventory Items</div>
                            <div class="h5 mb-0 fw-bold text-gray-800" id="inventoryCount">0</div>
                            <div class="text-danger small" id="lowStockAlert"></div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-warehouse fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card shadow h-100">
                <div class="card-body border-left-info">
                    <div class="row align-items-center">
                        <div class="col">
                            <div class="text-xs fw-bold text-info text-uppercase mb-1">System Health</div>
                            <div class="h5 mb-0 fw-bold text-gray-800" id="systemHealth">-</div>
                            <div class="text-muted small" id="healthDetails"></div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-heartbeat fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card shadow h-100">
                <div class="card-body border-left-warning">
                    <div class="row align-items-center">
                        <div class="col">
                            <div class="text-xs fw-bold text-warning text-uppercase mb-1">Response Time</div>
                            <div class="h5 mb-0 fw-bold text-gray-800" id="responseTime">0ms</div>
                            <div class="text-muted small" id="requestRate"></div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-tachometer-alt fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Services Status and Resources -->
    <div class="row">
        <!-- Services Status Table -->
        <div class="col-xl-8">
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex justify-content-between align-items-center">
                    <h6 class="m-0 fw-bold text-primary">Microservices Status</h6>
                    <div id="lastUpdated" class="text-muted small"></div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover" id="servicesTable">
                            <thead>
                                <tr>
                                    <th>Service</th>
                                    <th>Status</th>
                                    <th>Uptime</th>
                                    <th>Last Updated</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr id="orderserviceRow">
                                    <td>Order Service</td>
                                    <td><span class="badge bg-secondary">Unknown</span></td>
                                    <td>-</td>
                                    <td>-</td>
                                </tr>
                                <tr id="inventoryserviceRow">
                                    <td>Inventory Service</td>
                                    <td><span class="badge bg-secondary">Unknown</span></td>
                                    <td>-</td>
                                    <td>-</td>
                                </tr>
                                <tr id="frontendserviceRow">
                                    <td>Frontend Service</td>
                                    <td><span class="badge bg-secondary">Unknown</span></td>
                                    <td>-</td>
                                    <td>-</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- System Resources -->
        <div class="col-xl-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 fw-bold text-primary">System Resources</h6>
                </div>
                <div class="card-body">
                    <div class="mb-4">
                        <div class="d-flex justify-content-between mb-1">
                            <span>CPU Usage</span>
                            <span id="cpuUsageText">0%</span>
                        </div>
                        <div class="progress" style="height: 10px;">
                            <div class="progress-bar" role="progressbar" id="cpuUsage" style="width: 0%"></div>
                        </div>
                    </div>

                    <div class="mb-4">
                        <div class="d-flex justify-content-between mb-1">
                            <span>Memory Usage</span>
                            <span id="memoryUsageText">0%</span>
                        </div>
                        <div class="progress" style="height: 10px;">
                            <div class="progress-bar bg-info" role="progressbar" id="memoryUsage" style="width: 0%"></div>
                        </div>
                    </div>

                    <div>
                        <div class="d-flex justify-content-between mb-1">
                            <span>Storage Usage</span>
                            <span id="storageUsageText">0%</span>
                        </div>
                        <div class="progress" style="height: 10px;">
                            <div class="progress-bar bg-warning" role="progressbar" id="storageUsage" style="width: 0%"></div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Additional Health Info Card -->
            <div class="card shadow">
                <div class="card-header py-3">
                    <h6 class="m-0 fw-bold text-primary">Health Summary</h6>
                </div>
                <div class="card-body">
                    <div id="healthSummary">
                        <div class="d-flex justify-content-between mb-2">
                            <span>Total Services:</span>
                            <span id="totalServices">3</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Healthy Services:</span>
                            <span id="healthyServices">0</span>
                        </div>
                        <div class="d-flex justify-content-between">
                            <span>System Uptime:</span>
                            <span id="systemUptime">-</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let updateInterval;

        async function updateDashboard() {
            try {
                const [dashboardData, serviceStatus] = await Promise.all([
                    fetch('/Home/GetDashboardData').then(r => r.json()),
                    fetch('/Home/GetServiceStatus').then(r => r.json())
                ]);

                // Update key metrics cards
                updateMetricsCards(dashboardData);

                // Update service statuses
                updateServiceTable(serviceStatus);

                // Update resource usage
                updateResourceUsage('cpu', dashboardData.cpuUsage);
                updateResourceUsage('memory', dashboardData.memoryUsage);
                updateResourceUsage('storage', dashboardData.storageUsage);

                // Update last refresh time
                const lastUpdated = document.getElementById('lastUpdated');
                if (lastUpdated) {
                    lastUpdated.textContent = `Last updated: ${new Date().toLocaleTimeString()}`;
                }

            } catch (error) {
                console.error('Error updating dashboard:', error);
            }
        }

        function updateMetricsCards(data) {
            // Update the metrics cards
            const updates = {
                'activeOrdersCount': data.activeOrders || 0,
                'inventoryCount': data.inventoryCount || 0,
                'systemHealth': data.systemHealth || '-',
                'responseTime': data.responseTime || '0ms'
            };

            for (const [id, value] of Object.entries(updates)) {
                const element = document.getElementById(id);
                if (element) {
                    element.textContent = value;
                }
            }
        }

        function updateServiceTable(services) {
            if (!Array.isArray(services)) {
                console.error('Services data is not an array:', services);
                return;
            }

            services.forEach(service => {
                // Convert service name to ID format
                const serviceId = service.Name.replace(/\s+/g, '').toLowerCase();
                const rowId = `${serviceId}Row`;
                const row = document.getElementById(rowId);

                if (!row) {
                    console.warn(`Row not found for service: ${service.Name} (looking for ID: ${rowId})`);
                    return;
                }

                // Update status badge
                const statusBadge = row.querySelector('.badge');
                if (statusBadge) {
                    const statusClass = getStatusClass(service.Status);
                    statusBadge.className = `badge ${statusClass}`;
                    statusBadge.textContent = service.Status;
                }

                // Update uptime
                const uptimeCell = row.querySelector('td:nth-child(3)');
                if (uptimeCell) {
                    uptimeCell.textContent = service.Uptime || '-';
                }

                // Update last updated time
                const lastUpdateCell = row.querySelector('td:nth-child(4)');
                if (lastUpdateCell) {
                    lastUpdateCell.textContent = service.LastUpdated ?
                        new Date(service.LastUpdated).toLocaleString() : '-';
                }
            });
        }

        function getStatusClass(status) {
            switch (status?.toLowerCase()) {
                case 'healthy':
                    return 'bg-success';
                case 'unhealthy':
                    return 'bg-danger';
                case 'degraded':
                    return 'bg-warning';
                default:
                    return 'bg-secondary';
            }
        }

        function updateResourceUsage(type, value) {
            const bar = document.getElementById(`${type}Usage`);
            const text = document.getElementById(`${type}UsageText`);

            if (!bar || !text) {
                console.warn(`Resource usage elements not found for type: ${type}`);
                return;
            }

            // Ensure value is a number and between 0-100
            value = Math.min(Math.max(Number(value) || 0, 0), 100);

            bar.style.width = `${value}%`;
            text.textContent = `${value}%`;

            // Update color based on usage
            bar.className = `progress-bar ${getResourceUsageClass(value)}`;
        }

        function getResourceUsageClass(value) {
            if (value > 80) return 'bg-danger';
            if (value > 60) return 'bg-warning';
            return 'bg-success';
        }

        // Initialize dashboard when DOM is ready
        document.addEventListener('DOMContentLoaded', () => {
            console.log('Initializing dashboard...');
            updateDashboard();
            updateInterval = setInterval(updateDashboard, 30000);
        });

        // Cleanup on page unload
        window.addEventListener('beforeunload', () => {
            if (updateInterval) {
                clearInterval(updateInterval);
            }
        });

        // Add manual refresh handler
        const refreshButton = document.querySelector('[data-refresh]');
        if (refreshButton) {
            refreshButton.addEventListener('click', updateDashboard);
        }
    </script>
}