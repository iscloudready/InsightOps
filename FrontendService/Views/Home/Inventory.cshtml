@model IEnumerable<InventoryItemDto>
@using FrontendService.Models.DTOs

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Inventory Management</h1>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addInventoryModal">
            <i class="fas fa-plus"></i> Add Item
        </button>
    </div>

    <div class="row mb-4">
        <!-- Low Stock Alert Card -->
        <div class="col-xl-4 col-md-6 mb-4">
            <div class="card border-left-warning h-100">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Low Stock Items
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.Count(i => i.IsLowStock)
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-exclamation-triangle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Total Items Card -->
        <div class="col-xl-4 col-md-6 mb-4">
            <div class="card border-left-primary h-100">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Total Items
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.Count()
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-boxes fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-warehouse me-1"></i>
            Inventory Items
        </div>
        <div class="card-body">
            <table class="table table-striped" id="inventoryTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Minimum Quantity</th>
                        <th>Status</th>
                        <th>Last Restocked</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.Quantity</td>
                            <td>@item.Price.ToString("C")</td>
                            <td>@item.MinimumQuantity</td>
                            <td>
                                <span class="badge @(item.IsLowStock ? "bg-danger" : "bg-success")">
                                    @(item.IsLowStock ? "Low Stock" : "In Stock")
                                </span>
                            </td>
                            <td>@item.LastRestocked.ToString("g")</td>
                            <td>
                                <div class="btn-group">
                                    <button class="btn btn-sm btn-warning" onclick="updateStock(@item.Id)">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-sm btn-info" onclick="viewHistory(@item.Id)">
                                        <i class="fas fa-history"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Add Inventory Modal -->
<div class="modal fade" id="addInventoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Item</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="addInventoryForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Item Name</label>
                        <input type="text" name="Name" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Quantity</label>
                        <input type="number" name="Quantity" class="form-control" required min="0" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Price</label>
                        <input type="number" name="Price" class="form-control" required min="0" step="0.01" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Minimum Quantity</label>
                        <input type="number" name="MinimumQuantity" class="form-control" required min="0" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Item</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Update Stock Modal -->
<div class="modal fade" id="updateStockModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update Stock</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="updateStockForm">
                <input type="hidden" id="updateItemId" name="Id" />
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">New Quantity</label>
                        <input type="number" name="Quantity" class="form-control" required min="0" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update Stock</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#inventoryTable').DataTable({
                order: [[4, 'asc']], // Sort by status by default
                pageLength: 25
            });
        });

        async function updateStock(id) {
            $('#updateItemId').val(id);
            $('#updateStockModal').modal('show');
        }

        async function viewHistory(id) {
            // Implement stock history view
            alert('Stock history for item ID: ' + id);
        }

        // Add form submission handler
        $('#addInventoryForm').on('submit', async function(e) {
            e.preventDefault();
            try {
                const formData = new FormData(this);
                const response = await fetch('/Home/AddInventoryItem', {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    location.reload();
                } else {
                    alert('Failed to add item');
                }
            } catch (error) {
                alert('Error: ' + error);
            }
        });

        // Update stock form submission handler
        $('#updateStockForm').on('submit', async function(e) {
            e.preventDefault();
            try {
                const formData = new FormData(this);
                const response = await fetch('/Home/UpdateStock', {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    location.reload();
                } else {
                    alert('Failed to update stock');
                }
            } catch (error) {
                alert('Error: ' + error);
            }
        });

        // Show success/error messages
        @if (TempData["Success"] != null)
        {
            <text>
                $(document).ready(function() {
                    alert('@TempData["Success"]');
                });
            </text>
        }
        @if (TempData["Error"] != null)
        {
            <text>
                $(document).ready(function() {
                    alert('@TempData["Error"]');
                });
            </text>
        }
    </script>
}